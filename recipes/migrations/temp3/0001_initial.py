# Generated by Django 4.1 on 2022-08-22 03:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import recipes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=400, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('description', models.CharField(default='', max_length=3000, verbose_name='Description (1 sentence)')),
                ('prep_time', models.CharField(blank=True, default=None, max_length=3000, null=True, verbose_name='Prep time')),
                ('cook_time', models.CharField(blank=True, default=None, max_length=3000, null=True, verbose_name='Cook time')),
                ('servings', models.FloatField(blank=True, default=None, max_length=3000, null=True, verbose_name='Servings')),
                ('introduction', models.CharField(blank=True, default=None, max_length=20000, null=True, verbose_name='Introduction')),
                ('variations', models.CharField(blank=True, default=None, max_length=20000, null=True, verbose_name='Variations')),
                ('title_image', models.ImageField(blank=True, default=None, null=True, upload_to='')),
                ('instructions', models.TextField(default='1. Churn the butter.', max_length=20000)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', recipes.models.TagField(max_length=35, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.tag')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=400, null=True)),
                ('ingredient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient')),
                ('recipe_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(through='recipes.RecipeIngredient', to='recipes.ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(through='recipes.RecipeTag', to='recipes.tag'),
        ),
    ]
